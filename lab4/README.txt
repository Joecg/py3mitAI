This file discusses the extra credit work I have done in this lab, as well as a useful detail I have noticed in the constraint satisfaction problem algorithms.
At the time of writing, I have just completed the basic requirements for lab 4.  Later this summer, my sister is going to get married.  She has invited many guests to her wedding, so the seating arrangement for the reception will be time-consuming to design.  One of the extra credit recommendations for lab 4 involves expanding the CSP functionality of the code to solve a wedding reception seating arrangement CSP.  Another involves expanding the program to accomodate constraints for groups larger than 2.  I have taken on these tasks in order to help my sister arrange the seating for her wedding reception.  The associated files for this undertaking are stored in the extra_credit/ directory.
While working on the extra credit portion of this lab, I have noticed a shortfall in the pseudocode recommendation for the forward checking and forward checking with singleton propagation algorithms as laid out in the description PDF file.  Both algorithms recommend returning False if the domain of Y is empty as part of the `for` loop in which values are removed from Y's domain.  This involves just slightly more work than is necessary.  Since the domain of Y cannot be emptied before all the values have been removed from it, the check is redundant until after the loop for removing values has been completed.  I suggest, therefore, that the check for an empty domain be performed after the loop, instead of on each iteration.  The algorithm will behave exactly the same, but will spend less time checking a list that cannot yet be empty.  Rerunning the homework tester demonstrates that the algorithms still functions the same way.
